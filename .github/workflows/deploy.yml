name: deploy

on:
  workflow_run:
    workflows: ["check"]
    branches: [main]
    types:
      - completed
  # schedule:
    # - cron: "0 18 * * 4"

  workflow_dispatch:

jobs:
  building:
    if: ${{ github.event_name != 'workflow_run' || github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: build
    outputs:
      building_id: ${{ steps.push.outputs.building_id }}
    steps:
      - name: Wait for check workflows_run to succeed
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: exit 1
      - name: Clone
        run: |
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} .
            git checkout ${{ github.ref }}
        shell: bash
      - name: Build
        id: build
        uses: ./.github/heroku-build
        with:
          app-name: "${{secrets.APP}}"
          api-key: "${{secrets.KEY}}"
      - name: Push
        id: push
        if: ${{ success() && steps.build.conclusion == 'success' }}
        run: |
          echo ðŸ“²ðŸ“²ðŸ“²
          #sleep 300
          echo "::set-output name=building_id::$BUILDING_ID"
  
  deploying: 
    if:  ${{ success() }}
    needs: building
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - name: clone 
        run: |
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} .
            git checkout ${{ github.ref }}
        shell: bash
      
      - name: build
        run: |
          echo ðŸ’¤ðŸ’¤ðŸ’¤ ${{ needs.build.outputs.build_id }}
          #sleep 100
      
      - name: deploy
        if:  ${{ success() }}
        uses: ./.github/heroku-deploy 
        with:
          heroku_api_key: ${{ secrets.KEY }}
          heroku_app_name: ${{ secrets.APP }}
          heroku_email: ${{ secrets.MAIL }}
