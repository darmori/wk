name: check

on:
  schedule:
    - cron: "0 18 * * 4"

  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: "ðŸ—‘ clean"
        shell: bash
        run: |
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} tmp
            cd tmp/.github
            rm -rf heroku-deploy heroku-build checkout
            cd ../
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "$(git log -1 --pretty=%s)"
            git push --force https://${{ secrets.TOKEN }}@github.com/${{ github.repository }} main
            rm -rf ../tmp

      - name: "ðŸ’« fetch"
        shell: bash
        run: |
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} tmp
            cd tmp/.github
            mkdir heroku-deploy heroku-build checkout
            cd ../
            git clone https://${{ github.token }}@github.com/${{ secrets.HK }} HK
            mv HK/* .github/heroku-deploy
            git clone https://${{ github.token }}@github.com/${{ secrets.HD }} HD
            mv HD/* .github/heroku-build
            git clone https://${{ github.token }}@github.com/${{ secrets.CK }} CK
            mv CK/* .github/checkout
            rm -rf HK HD CK
            
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add .
            git commit -m "$(git log -1 --pretty=%s)"
            git push --force https://${{ secrets.TOKEN }}@github.com/${{ github.repository }} main
            rm -rf ../tmp
  deploy:
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: clone
        run: |
            git clone --quiet https://${{ github.token }}@github.com/${{ github.repository }} .
            git checkout ${{ github.ref }}
        shell: bash
      - name: build
        run: |
          mkdir -p ${{ runner.temp }}/heroku-build && chmod -R 770 ${{ runner.temp }}/heroku-build
          tar --warning=no-file-changed -czf ${{ runner.temp }}/heroku-build/release.tgz --exclude .git .
          sources=`curl -X POST https://api.heroku.com/apps/${{secrets.APP}}/sources -H 'Accept: application/vnd.heroku+json; version=3' -H 'Authorization: Bearer ${{secrets.KEY}}'`
          get_url=`echo $(jq -r '.source_blob.get_url' <<< "$sources")`
          put_url=`echo $(jq -r '.source_blob.put_url' <<< "$sources")`
          curl $put_url -X PUT -H "Content-Type:" -H "Accept: application/vnd.heroku+json; version=3" --data-binary @${{ runner.temp }}/heroku-build/release.tgz
          curl -X POST https://api.heroku.com/apps/${{secrets.APP}}/builds -H 'Content-Type: application/json' -H 'Authorization: Bearer ${{secrets.KEY}}' -H 'Accept: application/vnd.heroku+json; version=3' -d "{\"source_blob\":{\"url\":\"$get_url\",\"version\":\"`git rev-parse HEAD`\"}}"
        shell: bash
      - name: deploy
        run: |
          echo ðŸ•“ 
          #sleep 300
